plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.donghyuns.oauth.validator'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate.orm:hibernate-core:6.5.3.Final'
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.5.3.Final' // Community Dialect 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Postgres
    implementation 'org.postgresql:postgresql:42.7.3'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // jnanoid - random string generation
    implementation 'co.wosher:jnanoid-enhanced:main-SNAPSHOT'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    // JWT Token
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // google gson
    implementation 'com.google.code.gson:gson:2.8.9'

    // Apache HTTPClient 4.5.14 추가
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'

}

//tasks.named('test') {
//    useJUnitPlatform()
//}
